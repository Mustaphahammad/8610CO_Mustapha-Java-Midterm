***ANSWER ALL OF THE QUESTIONS BELOW***

What is a programming language?
Answer:Computer programming languages allow us to give instructions to a computer
in a language the computer understands. The portion of the language that a computer
can understand is called a “binary.” Translating programming language into binary is known as "compiling"
and Each language has its own distinct features.

What is a JDK composed of? Define each component?
Answer:The Java Development Kit (JDK) is a software development environment which is used to develop
java applications.The JDK contains a private Java Virtual Machine (JVM) and a few other resources such as
an interpreter/loader (Java), a compiler (javac), an archiver (jar), a documentation generator (Javadoc) etc.
to complete the development of a Java Application.

What is an IDE?
Answer:Java IDE (Integrated Development Environment) is a software application that enables users to write and
debug Java programs more easily. Most IDEs have features such as syntax highlighting and code completion that
helps users to code more easily. Usually, Java IDEs include a code editor, a compiler, a debugger, and an
interpreter that the developer may access via a single graphical user interface. Java IDEs also provide
language-specific elements such as Maven, Ant building tools, Junit, and TestNG for testing.

What are some of the most popular Java IDEs available in the market?
Answer:Eclipse,NetBeans,IntelliJ IDEA,BlueJ,JCreator,JDeveloper,MyEclipse,Greenfoot,DrJava,Xcode,Codenvy.

Explain the entire java life cycle.
Answer:Life cycle of a java program tells us what happens right from the point when we type source code
in a text editor to the point that source code is converted into machine code (0’s and 1’s).
There are three main stages in the life cycle of a java program. They are:
1) Editing the program: First, we start with typing the program in a text-editor
(ex: notepad, notepad++, wordpad, textedit etc).
After completing editing of the program, we have to save the file with .java extension.
2) Compiling the source code: Second step is compilation. The name of the Java compiler is javac.
The output of the compiler is machine independent or platform independent code which is known as bytecode.
The file which is generated after compilation is .class file.
3) Executing the byte code:Last step is execution. The bytecode generated by the compiler will be executed by
Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will
be executed by the CPU of the local machine.

What is a class?
Answer:A class is a group of objects which have common properties. It is a template or blueprint from which
objects are created. It is a logical entity. It can't be physical.

What is an object?
Answer:An entity that has state and behavior is known as an object.
It can be physical or logical (tangible and intangible).

What is the entry point of a Java project?
Answer:The entry point is a class having a method with signature public static void main(String[] args) .

Why is the main() method static?
Answer:In Java whenever we need to call an (instance) method we should instantiate the class (containing it)
and call it. If we need to call a method without instantiation it should be static.
Moreover, static methods are loaded into the memory along with the class.In the case of the main method,
it is invoked by the JVM directly, so it is not possible to call it by instantiating its class.
And, it should be loaded into the memory along with the class and be available for execution.
Therefore, the main method should be static.

Which class is the superclass of all classes?
Answer:Object class is the root or superclass of the class hierarchy, which is present in java. lang package.
All predefined classes and user-defined classes are the subclasses from Object class.

What is difference between path and classpath variables?
Answer:The main difference between PATH and CLASSPATH is that Path is set for java tools in java programs
like java and javac, which are used to compile your code. Whereas CLASSPATH is used by System or Application
class loader to locate and load compile Java bytecodes stored in the . class file.

What is the difference between an Interface and Abstract class?
Answer:An abstract class allows you to create functionality that subclasses can implement or override.
An interface only allows you to define functionality, not implement it.
And whereas a class can extend only one abstract class, it can take advantage of multiple interfaces.

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer:
1)No, you cannot instantiate an interface. Generally, it contains abstract methods (except default and static
 methods introduced in Java8), which are incomplete.
Still if you try to instantiate an interface, a "compile time error" will be generated saying
“MyInterface is abstract; cannot be instantiated”. we can't create an object of an abstract class.
But we can create a reference variable of an abstract class.
The reference variable is used to refer to the objects of derived classes (subclasses of abstract class)

What is Access Modifier?
Answer:Access Modifier used to helps to restrict the scope of a class, constructor, variable, method, or data member.

What is OOP? Define each OOP concept.
Answer:OOps in java is to improve code readability and reusability by defining a Java program efficiently.
The main principles of object-oriented programming are :
Abstraction, encapsulation, inheritance, and polymorphism (compile time and run time polymorphism).
These concepts aim to implement real-world entities in programs.

What is Java Package and which package is imported by default?
Answer:In Java, the package is the collection of Java classes and interfaces.
       - JVM internally import java.lang package by default.

What is an API? List some API's that you have used so far.
Answer:
The full form of API is Application Programming Interface. It is a document which gives you the list of all
the packages, classes, and interfaces, along with their fields and methods.
Using these API's, the programmer can know how to use the methods, fields, classes, interfaces provided by
Java libraries.
Some API's we used :java.lang.

Does java support multiple inheritance? Why or why not?
Answer:No , java does not support multiple inheritance ,a class cannot extend more than one class
and the reason behind this is to prevent ambiguity, java compiler cannot decide, which display
method it should inherit in case both classes have the same method display().

What is method overloading? List all the different ways to overload.
Answer: method overloading is having the same method with the same name but different number,order,data type of
parameters.

Explain exceptions in java and how to handle them.
Answer: An exception is an event that occurs during the execution of a program that disrupts the normal flow of
instructions during the execution of a program.The try-catch is the simplest method of handling exceptions.
Put the code you want to run in the try block, and any Java exceptions that the code throws are caught by one or
more catch blocks.

What is static keyword? When and how do we use it?
Answer:means a member of a Class/type belongs to the Class/type itself, and not each instance/object of the type.
we use static when we want each instance of a class to share a common attribute/function.
how to use it is by simply put in the word "static" before the instance.

What is final keyword? When and how do we use it?
Answer: final is a java reserved keyword "non-access specifier" that is used to restrict a class, variable, and method.
Final variables: Prevents reassignment of variables
Final methods: Prevents over-riding
Final classes: Prevents extending


Explain the difference between final, finally and finalize?
Answer:final is an access modifier, finally is the block in Exception Handling and finalize is the
method of object class.

What is a constructor?
Answer:A constructor is a special method that is used to initialize objects.
The constructor is called when an object of a class is created.

Can we have multiple constructors in a class?
Answer:A class can have multiple constructors that assign the fields in different ways. Sometimes it's
beneficial to specify every aspect of an object's data by assigning parameters to the fields, but other
times it might be appropriate to define only one or a few.

If we don't have a constructor declared, what is called during the object creation?
Answer:Default constructor is called

What is "this" keyword in Java? When would we use it?
Answer:"this" keyword refers to the current object in a method or constructor.
The most common use of the "this" keyword is to eliminate the confusion between class attributes and
parameters with the same name (because a class attribute is shadowed by a method or constructor parameter).

What is "super" keyword in Java? What are some scenarios we would use it?
Answer:The super keyword refers to superclass (parent) objects. It is used to call superclass methods
and to access the superclass constructor. The most common use of the super keyword is to eliminate the
confusion between superclasses and subclasses that have methods with the same name.

What does JVM stand for?
Answer:Java Virtual Machine.

Is JVM platform independent?
Answer:No, JVM is platform dependent ,the JVM depends on the operating system.

What version of Java are you using?
Answer:java version "18.0.2.1"

What does JAR stand for?
Answer:Java ARchive

What is the difference between JDK and JVM?
Answer:JDK (Java Development Kit) is a Kit that provides the environment to develop and execute(run) the
Java program. JDK is a kit(or package) that includes two things: Development Tools and JRE .
JVM (Java Virtual Machine) is a very important part of both JDK and JRE because it is contained or inbuilt
in both. Whatever Java program you run using JRE or JDK goes into JVM and JVM is responsible for executing
the java program line by line.

what is the difference between JVM and JRE?
Answer:JRE identifies all the helpful class libraries needed for execution, while JVM is a subclass of JRE
that decodes the bytecode into machine language and other minor tasks. JVM and JRE do not participate in
development processes like debugging and compiling; JDK is used for them.

Explain the difference between compile-time and run-time?
Answer:compile-time is the time period of a translation of source code (.java file ) to byte code (.class file)
using java compiler (javac).
run-time is time period when the converted code, which is now in machine code, is executed (java  )
basically refers to the time when the code does what it was written to do.

What is heap?
Answer:is the area of memory used to store objects instantiated by applications running on the JVM.

How does Java manage its memory?
Answer: Java uses an automatic memory management system called a garbage collector, this helps
to manage the process of allocating and de-allocating objects in memory.

What is the difference between String, StringBuffer and StringBuilder?
Answer:String is immutable whereas StringBuffer and StringBuilder are mutable classes.
StringBuffer is thread-safe and synchronized whereas StringBuilder supports multi threading and not
synchronized , that's why StringBuilder is faster than StringBuffer.

What is Singleton class?
Answer:Singleton is a design pattern that ensures that a class can only have one instance of the class.

What is Serialization and Deserialization?
Answer:Serialization is a mechanism of converting the state of an object into a byte stream.
Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory.

Explain the difference between While and Do..While loops?
Answer:While loop checks the condition first and then executes the statement(s), whereas do while loop will
execute the statement(s) at least once, then the condition is checked.

What is Enum?
Answer:An enum is a special "class" that represents a group of constants
       (unchangeable variables, like final variables)

What is Iterator?
Answer:An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet

Which one will take more memory: an int or Integer? Why?
Answer:Integer will take more memory because is an object which takes 16 bytes to store its int values.
In the other hand we have the primitive data type int that takes only 4 bytes to store.

Why are Strings considered to be immutable in Java?
Answer:In the String constant pool, a String object is likely to have one or many references.
If several references point to the same String without even knowing it, it would be bad if one of the references
modified that String value. That's why String objects are immutable.

What is constructor chaining in Java?
Answer:Constructor chaining is the process of calling a sequence of constructors. We can do it in two ways: by using this() keyword
for chaining constructors in the same class. by using super() keyword for chaining constructors from the parent class.

The difference between Serial and Parallel Garbage Collector?
Answer: Both are generational collectors the primary difference between the serial and parallel collectors is
that the parallel collector has multiple threads that are used to speed up garbage collection.

What does JIT stands for?
Answer: JIT stands for Just-in-time compilation.

Explain the process of Java garbage collection?
Answer:Automatic garbage collection is the process of looking at heap memory, identifying which objects are
in use and which are not and deleting the unused objects.

Can you guarantee the garbage collection process?
Answer:No, Garbage collection does not guarantee that a program will not run out of memory.

What is the difference between stack and heap in Java?
Answer:Heap memory is used by all the parts of the application whereas stack memory is used only by one thread of execution.
Whenever an object is created, it's always stored in the Heap space and stack memory contains the reference to it.

What is reflection in Java and why is it useful?
Answer:Is a feature that allows an executing java programme to examine upon itself and manipulate properties of the programme.
Useful :we can reflect a class by creating an object of that class then we'll have access to all its attributes, methods and constructor present in the class.

What is multithreading in Java?
Answer:Multithreading is the ability of a program or an operating system to enable more than one user at a time without requiring multiple
copies of the program running on the computer. Multithreading can also handle multiple requests from the same user.

What is synchronization in Java?
Answer:Synchronization in java is the capability to control the access of multiple threads to any shared resource.

What is a Framework?
Answer: is a support structure or system that holds parts together, has something stretched over it or acts as the main structure.


What are the testing Frameworks available in Java?
Answer:1. Selenium.
       2. JUnit.
       3. TestNG.
       4. SerenityBDD.
       5. Mockito.

What are jUnit and testNG?
Answer:JUnit is an open-source framework used to trigger and write tests.
TestNG is a Java-based framework that is an upgraded option for running tests.

What are the dependencies for this project?
Answer: MySQL connector, testNG, mongo-java-driver, javax json,jackson, gson and java json.

What is dependency injection in Java?
Answer:DI is the concept in which objects get other required objects from outside ,is also called Inversion of Control.
A Java class has a dependency on another class, if it uses an instance of this class.
Explain what static binding and dynamic binding is?
Answer:
Static binding: The binding which can be resolved at compile time by the compiler is known as static or early binding.
The binding of all the static, private, and final methods is done at compile-time "method overloading".
Dynamic binding: We also call Dynamic binding as Late Binding because binding takes place during the actual execution
of the program. The best example of Dynamic binding is the Method Overriding where both the Parent class and the derived
classes have the same method.